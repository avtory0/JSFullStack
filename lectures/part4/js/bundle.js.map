{"version":3,"sources":["webpack://part4/./lib.js","webpack://part4/webpack/bootstrap","webpack://part4/webpack/runtime/define property getters","webpack://part4/webpack/runtime/hasOwnProperty shorthand","webpack://part4/webpack/runtime/make namespace object","webpack://part4/./script.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6BAA6B;;;;AAItB;AACP;;AAEa;;AAEE;AACf;AACA;AACA;;;;;;;UC9CA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,wF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;;;;;;;;;ACNA;AACA;AACA;AACA;;AAEA,0CAA0C;AAC1C,sDAAsD;;AAEtD;;AAEA;AACA,qB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B,2BAA2B;AAC3B,QAAQ;AACR,IAAI;;AAEJ,6BAA6B;AAC7B;AACA;AACA;AACA,WAAW;AACX,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ,QAAQ;AACR,IAAI;AACJ;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA,IAAI;;;;;AAKJ;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA,IAAI;AACJ;;;AAGA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,IAAI;;AAEJ;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,KAAK,IAAI,QAAQ;AACxE;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,qBAAqB;AACrB;;AAEA;;;AAGA;AACA;AACA,wCAAwC;AACxC;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yCAAyC,UAAU,WAAW,UAAU;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;;;AAIA;;AAEA;;AAEA,2CAA2C;AAC3C;AACA;;;AAGA,WAAW,aAAa;AACxB,WAAW,SAAS;AACa;AACJ;;AAE7B,eAAe,wCAAQ,CAAC,OAAO,wCAAQ,CAAC;AACxC;AACA,gDAAK,G","file":"bundle.js","sourcesContent":["// const number = 1;\r\n\r\n// (function(){\r\n//     let number = 2;\r\n//     console.log(number);\r\n//     console.log(number + 3);\r\n// }());\r\n\r\n// console.log(number);\r\n\r\n// const user = (function(){\r\n//     const private = function() {\r\n//         console.log('i am privat');\r\n//     };\r\n\r\n//     return {\r\n//         saySmth: private\r\n//     };\r\n// }());\r\n\r\n// user.saySmth();\r\n\r\n// ////----\r\n\r\n// function myModyle() {\r\n//     this.hello = function() {\r\n//         console.log('hello');\r\n//     };\r\n\r\n//     this.goodbye = function() {\r\n//         console.log('bye bye');\r\n//     };\r\n// }\r\n\r\n// module.exports = myModyle; // экспорт ф-ции из одного файла в др.\r\n\r\n\r\n\r\nexport let one = 1;\r\nlet two = 2;\r\n\r\nexport {two};\r\n\r\nexport default function sayHello() {\r\n    console.log('hello');\r\n}\r\n//default - экспорт по умолчанию, может ббыть только один\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// // const person = {\r\n// //     name: 'John',\r\n// //     tel: '+375292250045'\r\n// // };\r\n\r\n// // console.log(JSON.stringify(person)); //в JSON\r\n// // console.log(JSON.parse(JSON.stringify(person))); //из json-а\r\n\r\n// console.log('запрос данных..');\r\n\r\n// const req = new Promise((resolve, reject) => {\r\n//     // обедщаение; \r\n//     //resolve - ф-ция обрабатывающая положиьтельный исход (then)\r\n//     // reject - обрабатывает в случае ошибки (catch)\r\n\r\n//     setTimeout(() => {\r\n//         console.log('подготовка данных...');\r\n\r\n//         const product = {\r\n//             name: 'TV',\r\n//             price: 2000\r\n//         };\r\n\r\n//         // resolve(product); // вызов resolve, парамтр передает данные для связи (product)\r\n//         reject(product); //обработка ошибки (catch)\r\n//     }, 2000);\r\n// });\r\n\r\n// // req.then((product) => { //иницилизация ф-ции\r\n// //     setTimeout(() => {\r\n// //         product.status = 'order';\r\n// //         console.log(product);\r\n// //     }, 2000);\r\n// // });\r\n\r\n// req.then((product) => {\r\n//     return new Promise((resolve, reject) => {\r\n//         setTimeout(() => {\r\n//             product.status = 'order';\r\n//             resolve(product);\r\n//         }, 2000);\r\n//     });\r\n// }).then((product) => {\r\n//     product.modify = true;\r\n//     return product;\r\n// }).then(product => {\r\n//     console.log(product);\r\n// }).catch(() => {\r\n//     console.error('произошла ошибка');\r\n// }).finally(() => {\r\n//     console.log('finally');\r\n// });\r\n\r\n\r\n\r\n\r\n// const test = time => {\r\n//     return new Promise((resolve) => {\r\n//         setTimeout(() => resolve(), time);\r\n//     });\r\n// };\r\n\r\n// // test(1000).then(() => console.log('1000 ms'));\r\n// // test(2000).then(() => console.log('2000 ms'));\r\n\r\n// Promise.all([test(1000), test(2000)]).then(() => {\r\n//     console.log('all');\r\n// });\r\n// //Promise.all ожидает завершения всех переданных промисов в массив и потом уже что-то выполняет\r\n\r\n// Promise.race([test(1000), test(2000)]).then(() => {\r\n//     console.log('all');\r\n// });\r\n// //Promise.race - выполняет свои действия после завершения самого первого промиса\r\n\r\n\r\n// //-----------------------------------------------\r\n// //методы перебора массива\r\n\r\n// // -- filter\r\n\r\n// const names = ['Ivan', 'Anna', 'Ksenia', 'Voldemart'];\r\n\r\n// const shortNames = names.filter(name => {\r\n//     return name.length < 5;\r\n// });\r\n\r\n// console.log(shortNames);\r\n\r\n\r\n// //--map позволяет трансформировать каждый эл-т массива отдельно\r\n// let answers = ['IvAn', 'AnnA', 'Hello'];\r\n\r\n// answers = answers.map( item => item.toLowerCase());\r\n// console.log(answers);\r\n\r\n// // -- every/some (boolen)\r\n// //some - перебирает массив и если хотя бы 1 эл-т удовлетворяет условию - true, иначе false\r\n// //every - если все эл-ты соотв условию true, иначе false\r\n// const some = [4, 'sdf', 'qwreq'];\r\n\r\n// // console.log(some.some(item => typeof(item) === 'number'));\r\n// console.log(some.every(item => typeof(item) === 'number'));\r\n\r\n\r\n// // -- reduce - позволяет собирать массивы в один \r\n// // 1 параментр - ф-ция\r\n// //2 - начальное значение\r\n\r\n// const arr = [2,5,3,6,12];\r\n// // sum - сумма, current - текущее число\r\n// // после сложения sum и current sum получает значение равное предущей сумме \r\n// const res = arr.reduce((sum, current) => sum + current);\r\n// console.log(res);\r\n\r\n// const fruit = ['apple', 'pear', 'plum'];\r\n// const fruitRes = fruit.reduce((item, current) => `${item}, ${current}`);\r\n// console.log(fruitRes);\r\n\r\n// // \r\n\r\n// const obj = {\r\n//     ivan: 'person',\r\n//     ann: 'person',\r\n//     dog: 'animal',\r\n//     cat: 'animal'\r\n// };\r\n\r\n// const newResult = Object.entries(obj) // формирует массив из объекта\r\n// .filter(item => item[1] === 'person')\r\n// .map(item => item[0]);\r\n// //chain\r\n// console.log(newResult);\r\n\r\n\r\n\r\n\r\n//regexp\r\n\r\n// new RegExp('pattern', 'flags');\r\n// /patern/flags\r\n\r\n//Methods:\r\n//search - поиск первого соотв. Возвращает позицию символа, иначе -1\r\n//match - получаем массив(индекс, строка, группы) работает с флагом g\r\n//replace - позволяет заменить строку\r\n//test - проверяет на соответствие патерна (boolean)\r\n\r\n//flags\r\n//i - не зависит от регистра\r\n//g - ищем сразу несколько вхождения (не работает с методом search())\r\n//m - многострочное вхождение\r\n\r\n//classes\r\n// \\d - ищем цифры\r\n// \\w - все буквы\r\n// \\s - ищем все пробелы\r\n// \\D - не числа\r\n// \\W - не бувквы \r\n// \\S - не пробел\r\n\r\n\r\n// const ans = prompt('Введите ваше число');\r\nconst exmpl = 'My name is R2D2';\r\n// const pass = prompt('password, please');\r\n\r\n// const reg = /n/ig; // regex\r\nconst reg = /\\d/;\r\n\r\nconsole.log(exmpl.match(/\\D/ig));\r\n\r\n\r\n// console.log(ans.search(reg));\r\n// console.log(ans.match(reg));\r\n// console.log(pass.replace(/./g, '*')); // (/\\./) будет реагироваить только на точки '\\'\r\n// console.log('12-32-43'.replace(/-/g, ':'));\r\n\r\n\r\n\r\nclass User {\r\n    constructor(name, age) {\r\n        this.name = name;\r\n        this._age = age;\r\n    }\r\n\r\n    // #surname = 'balancevich';\r\n\r\n    // get surname() {\r\n    //     return this.#surname;\r\n    // }\r\n\r\n    // set surname(snm) {\r\n    //     this.#surname = snm;\r\n    // }\r\n\r\n    say() {\r\n        console.log(`Имя пользователя: ${this.name} возраст ${this._age}`);\r\n    }\r\n\r\n    get age() {\r\n        return this._age;\r\n    }\r\n\r\n    set age(age) {\r\n        if (typeof age === 'number' && age > 0 && age < 110) {\r\n            this._age = age;\r\n        } else {\r\n            console.log('недопустимое значение');\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst ivan = new User('ivan', 12);\r\nconsole.log(ivan.age);\r\nivan.age = 99;\r\nconsole.log(ivan.age);\r\n\r\nivan.say();\r\n\r\n\r\n\r\n//---\r\n\r\n// const myModule = require('.lib');\r\n\r\n// const myModuleInstance = new myModule(); // экземпляр объекта\r\n// myModuleInstance.hello();\r\n// myModuleInstance.goodbye();\r\n\r\n\r\n// import {one as first} from './lib';\r\n// import {one, two} from './lib';\r\nimport * as data from './lib.js';\r\nimport sayHi from './lib.js';\r\n\r\nconsole.log(`${data.one} and ${data.two}`);\r\n// console.log(first);\r\nsayHi();"],"sourceRoot":""}